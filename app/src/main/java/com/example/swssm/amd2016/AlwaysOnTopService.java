package com.example.swssm.amd2016;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.os.IBinder;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.example.swssm.amd2016.PagerAdapter.appPagers;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;

import static com.example.swssm.amd2016.permissionReader.getAppNameByPID;

/**
 * Created by jinheon Kim on 2016-02-24.
 */
public class AlwaysOnTopService extends Service {

    private static String TAG = "ALWAYSONTOPSERVICE";
    private String syscallList = "";
    private LayoutInflater mInflater;
    private appPagers wmPager;
    private Context mContext;
    private TextView tv_process;
    private ListView lv_wmAppList;
    private View v;
    private HashMap<String, Double> syscallMap;
    private TextView tv_tStart;
    private TextView tv_tStop;
    private static boolean trigBtThread = false;
    private static boolean trigBtProcess = false;
    private NumberThread mNumberThread;
    private String selectedAppPkgName = "";
    private int selectAppPid;
    private TextView tv_close;
    private TextView tv_fresh;

    @Override
    public IBinder onBind(Intent arg0) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();
        trigBtThread = false;
        trigBtProcess = false;
        mContext = getApplicationContext();

        mInflater = LayoutInflater.from(mContext);
        v = mInflater.inflate(R.layout.windowmanager_item, null);

        tv_process = (TextView) v.findViewById(R.id.tv_process);
        lv_wmAppList = (ListView) v.findViewById(R.id.lv_wmAppList);
        tv_tStart = (TextView) v.findViewById(R.id.tv_tStart);
        tv_tStop = (TextView) v.findViewById(R.id.tv_tStop);
        tv_close = (TextView) v.findViewById(R.id.tv_close);
        tv_fresh = (TextView) v.findViewById(R.id.tv_fresh);


        tv_process.setOnClickListener(onClicktv_process);



        tv_tStart.setOnClickListener(onClicktv_tStart);
        tv_tStop.setOnClickListener(onClicktv_tStop);
        tv_fresh.setOnClickListener(onClicktv_fresh);
        tv_close.setOnClickListener(onClicktv_close);

        wmPager = new appPagers(mContext, lv_wmAppList);
        wmPager.setAppListView_1();
        lv_wmAppList.setOnItemClickListener(onItemClickLv);

        WindowManager.LayoutParams params = new WindowManager.LayoutParams(
                WindowManager.LayoutParams.WRAP_CONTENT,
                WindowManager.LayoutParams.WRAP_CONTENT,
                WindowManager.LayoutParams.TYPE_PHONE,
                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE,
                PixelFormat.TRANSLUCENT);

        params.gravity = Gravity.LEFT | Gravity.TOP;


        WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);
        wm.addView(v, params);

    }



    private AdapterView.OnItemClickListener onItemClickLv = new AdapterView.OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            ListView listView = (ListView) parent;


            String item = (String) listView.getItemAtPosition(position);
            selectAppPid = Integer.parseInt(item);
            selectedAppPkgName = getAppNameByPID(mContext, selectAppPid);
            Toast.makeText(mContext, item + " " + selectedAppPkgName, Toast.LENGTH_LONG).show();
        }
    };


    // strace thread
    class NumberThread extends Thread {
        private Process exec;
        private boolean isPlay = false;

        public NumberThread(boolean isPlay) {
            this.isPlay = isPlay;
        }

        public void stopThread() {
            isPlay = !isPlay;
        }

        @Override
        public void run() {

            super.run();
            syscallMap = initSyscallHM.setHashMap(syscallMap);
            while (isPlay) {
                try {
                    exec = Runtime.getRuntime().exec("strace -p " + selectAppPid);
                    InputStreamReader is = new InputStreamReader(exec.getErrorStream());

                    String s;
                    BufferedReader br = new BufferedReader(is);
                    while ((s = br.readLine()) != null && isPlay) {
                        if (s.indexOf('(') >= 1) {

                            int a = s.indexOf('(');

                            try {
                                syscallMap.put(s.substring(0, a), syscallMap.get(s.substring(0, a)) + 1);
                            } catch (Exception e) {
                                Log.e(TAG, " hashmap dont put " + e.getMessage());
                            }
                        }
                        Log.i(TAG, " strace output " + s);
                    }
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            exec.destroy();
        }
    }


    private View.OnClickListener onClicktv_process = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (trigBtProcess == true) {
                trigBtProcess = false;
                lv_wmAppList.setVisibility(View.GONE);
                tv_tStart.setVisibility(View.GONE);
                tv_tStop.setVisibility(View.GONE);
                tv_close.setVisibility(View.GONE);
                tv_fresh.setVisibility(View.GONE);
            } else if (trigBtProcess == false) {
                trigBtProcess = true;
                lv_wmAppList.setVisibility(View.VISIBLE);
                tv_tStart.setVisibility(View.VISIBLE);
                tv_tStop.setVisibility(View.VISIBLE);
                tv_close.setVisibility(View.VISIBLE);
                tv_fresh.setVisibility(View.VISIBLE);

                appPagers pager1 = new appPagers(mContext, lv_wmAppList);

                pager1.setAppListView_1();
            }
        }
    };

    private View.OnClickListener onClicktv_tStart = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (trigBtThread == false) {
                trigBtThread = true;
                Toast.makeText(mContext, "start thread", Toast.LENGTH_SHORT).show();
                syscallMap = new HashMap<String, Double>();
                syscallList = "";
                mNumberThread = new NumberThread(true);
                mNumberThread.start();
            } else {
                Toast.makeText(mContext, "Thread has already been started.", Toast.LENGTH_SHORT).show();
            }
        }
    };

    private View.OnClickListener onClicktv_tStop = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (trigBtThread == true) {
                trigBtThread = false;
                Toast.makeText(mContext, "stop thread", Toast.LENGTH_SHORT).show();

                try {
                    mNumberThread.stopThread();
                    Log.e(TAG, " stop thread ");
                } catch (Exception e) {
                    Log.e(TAG, " thread can't stop " + e.getMessage());
                }

                String path = "/sdcard/";
                String fileName = "systemCall.txt";

                File file = new File(path + fileName);
                FileOutputStream fos = null;

                syscallList = initSyscallHM.getSyscallList(syscallMap);
                syscallList += "\t" + selectedAppPkgName + "\n";
                try {
                    fos = new FileOutputStream(file, true);
                    fos.write((syscallList).getBytes());
                    fos.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(mContext, "Please start a thread", Toast.LENGTH_SHORT).show();
            }
        }
    };


    private View.OnClickListener onClicktv_fresh = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            if (trigBtThread == true) {
                trigBtThread = false;
                Toast.makeText(mContext, "stop thread", Toast.LENGTH_SHORT).show();

                try {
                    mNumberThread.stopThread();
                    Log.e(TAG, " stop thread ");
                } catch (Exception e) {
                    Log.e(TAG, " thread can't stop " + e.getMessage());
                }

            } else {
                Toast.makeText(mContext, "Please start a thread", Toast.LENGTH_SHORT).show();
            }
        }
    };


    private View.OnClickListener onClicktv_close = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            mContext.stopService(new Intent(mContext, AlwaysOnTopService.class));
        }
    };



    @Override
    public void onDestroy() {
        super.onDestroy();
        if (v != null) {

            ((WindowManager) getSystemService(WINDOW_SERVICE)).removeView(v);
            v = null;
        }

    }
}