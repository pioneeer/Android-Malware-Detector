package com.example.swssm.amd2016.appListView;

import android.content.Context;
import android.database.Cursor;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.swssm.amd2016.R;
import com.example.swssm.amd2016.database.DbOpenHelper;

import java.util.ArrayList;

/**
 * Created by jinheon Kim on 2016-02-24.
 */
public class BaseExpandableAdapter extends BaseExpandableListAdapter {

    private ArrayList<String> groupList = null;
    private ArrayList<Drawable> groupIcon = null;
    private ArrayList<ArrayList<String>> childList = null;
    private LayoutInflater inflater = null;
    private ViewHolder viewHolder = null;
    private Context mContext;
    private DbOpenHelper mDbOpenHelper;
    private Cursor cs;

    public BaseExpandableAdapter(Context c, ArrayList<String> groupList, ArrayList<Drawable> groupIcon,
                                 ArrayList<ArrayList<String>> childList, DbOpenHelper mdb){
        super();
        this.mContext = c;
        this.inflater = LayoutInflater.from(c);
        this.groupList = groupList;
        this.groupIcon = groupIcon;
        this.childList = childList;
        this.mDbOpenHelper = mdb;
        mDbOpenHelper.open();

    }

    // 그룹 아이콘을 반환함.
    public Drawable getGroupIcon(int groupPosition){
        return groupIcon.get(groupPosition);
    }
    // 그룹 포지션을 반환한다.
    @Override
    public String getGroup(int groupPosition) {
        return groupList.get(groupPosition);
    }

    // 그룹 사이즈를 반환한다.
    @Override
    public int getGroupCount() {
        return groupList.size();
    }

    // 그룹 ID를 반환한다.
    @Override
    public long getGroupId(int groupPosition) {
        return groupPosition;
    }

    // 그룹뷰 각각의 ROW
    @Override
    public View getGroupView(int groupPosition, boolean isExpanded,
                             View convertView, ViewGroup parent) {

        View v = convertView;

        if(v == null){
            viewHolder = new ViewHolder();
            v = inflater.inflate(R.layout.app_listitem2, parent, false);

            viewHolder.appIcon = (ImageView) v.findViewById(R.id.appIcon2);
            viewHolder.appName = (TextView) v.findViewById(R.id.appName2);


            v.setTag(viewHolder);
        }else{
            viewHolder = (ViewHolder)v.getTag();
        }

        viewHolder.appName.setText(getGroup(groupPosition));
        viewHolder.appIcon.setImageDrawable(getGroupIcon(groupPosition));


        cs = mDbOpenHelper.getMatchName(getGroup(groupPosition));
        cs.moveToFirst();
        Log.i("dbfailed", "dbfailed" +  " " + cs.getString(0));
        int malrisk = cs.getInt(3);
        if(malrisk == 1){
            viewHolder.appName.setTextColor(Color.parseColor("#F29661"));
            viewHolder.appName.setText("[Warning] " + getGroup(groupPosition));

        }else if(malrisk == 3) {
            viewHolder.appName.setTextColor(Color.parseColor("#FF0000"));
            viewHolder.appName.setText("[DANGER] " + getGroup(groupPosition));
        }
        else{
            viewHolder.appName.setTextColor(Color.BLACK);
        }


        return v;
    }

    // 차일드뷰를 반환한다.
    @Override
    public String getChild(int groupPosition, int childPosition) {
        return childList.get(groupPosition).get(childPosition);
    }
    // 차일드뷰 사이즈를 반환한다.
    @Override
    public int getChildrenCount(int groupPosition) {
        return childList.get(groupPosition).size();
    }

    // 차일드뷰 ID를 반환한다.
    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return childPosition;
    }

    // 차일드뷰 각각의 ROW
    @Override
    public View getChildView(int groupPosition, int childPosition,
                             boolean isLastChild, View convertView, ViewGroup parent) {
        ViewHolder holder = null;
        View v = convertView;

        if (childPosition == 0) {
            v = inflater.inflate(R.layout.app_listitem2_pl1, null);
            return v;
        }
        if(convertView != null) {
            holder = (ViewHolder) v.getTag();
        }
        if(holder == null) {
            v = inflater.inflate(R.layout.app_listitem2_pl2, null);
            holder = new ViewHolder();
            v.setTag(holder);
        }
        holder.permissionChild = (TextView) v.findViewById(R.id.permissionChild);
        holder.permissionChild.setText(getChild(groupPosition, childPosition));


        v.setTag(holder);

        return v;
    }

    @Override
    public boolean hasStableIds() { return true; }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) { return true; }

    class ViewHolder {
        public ImageView appIcon;
        public TextView appName;
        public TextView permissionChild;

    }
}